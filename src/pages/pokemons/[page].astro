---
import type { GetStaticPaths } from "astro";
// Server Side Only - Build time
import PokemonCard from '../../components/pokemons/PokemonCard.astro';
import type { PokemonListResponse } from '../../interfaces/pokemon-list.response';

import MainLayout from "../../layouts/MainLayout.astro";
import Title from "@components/shared/Title.astro";


export const getStaticPaths = (async( { paginate }) => {
	
	const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
	const { results } = (await resp.json()) as PokemonListResponse;


	return paginate(results, {pageSize: 20});
}) satisfies GetStaticPaths;

const title = "Pokémon Static | Home";

const { page } = Astro.props;
---

<MainLayout title={title}>
		<Title>
			Listado paginado Pokémons
		</Title>

		<section 
			aria-label="Listado de Pokémons"
			class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4 mt-5"
		>
			{
				page.data.map((pokemon) => <PokemonCard name={pokemon.name} url={pokemon.url}/>)
			}
		</section>

		<section
			class="flex mt-10 gap-2 items-center"
		>
			<!-- Mostrar elementos dependiendo de si el resultado es true o false
				{ 
				page.url.prev && (
				<a class="btn" href={page.url.prev}>Anteriores</a>
				)
			} -->
			<a 
				class:list={[
					"btn",
					{
						'disabled': !page.url.prev,
					}
				]} 
				href={page.url.prev}
			>
				Anteriores
			</a>
			<a 
				class:list={[
					"btn",
					{
						'disabled': !page.url.next,
					}
				]} 
				href={page.url.next}
			>
				Siguientes
			</a>

			<div class="flex flex-1"></div>
			<span class="text-xl font-bold">Página {page.currentPage}</span>
		</section>
		<!-- <ul>
			{
				data.results.map((pokemon) => <li>{pokemon.name}</li>)
			}
		</ul> -->
</MainLayout>

<style>
	.btn {
		@apply bg-blue-500 p-2 text-white rounded-md;
	}
	.disabled {
		@apply bg-gray-600 text-gray-400;
	}
</style>
